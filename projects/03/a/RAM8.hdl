// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way (in=load, sel=address, out=loads);
    Register (in=in, load=loads[0], out=outs[0]);
    Register (in=in, load=loads[1], out=outs[1]);
    Register (in=in, load=loads[2], out=outs[2]);
    Register (in=in, load=loads[3], out=outs[3]);
    Register (in=in, load=loads[4], out=outs[4]);
    Register (in=in, load=loads[5], out=outs[5]);
    Register (in=in, load=loads[6], out=outs[6]);
    Register (in=in, load=loads[7], out=outs[7]);
    Mux8Way(in=outs, sel=address, out=out);
}
